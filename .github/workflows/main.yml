name: Flutter CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Flutter SDK
        id: cache-flutter
        uses: actions/cache@v3
        with:
          path: /opt/flutter
          key: ${{ runner.os }}-flutter-3.27.4

      - name: Install Flutter SDK (if not cached)
        if: steps.cache-flutter.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/flutter/flutter.git -b 3.27.4 /opt/flutter
          echo "/opt/flutter/bin" >> $GITHUB_PATH

      - name: Verify Flutter Installation
        run: |
          flutter doctor -v
          flutter --version

  code-quality:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Cached Flutter SDK
        run: echo "/opt/flutter/bin" >> $GITHUB_PATH

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter analyze
        run: flutter analyze

      - name: Run unit tests
        run: flutter test

  build-android:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Cached Flutter SDK
        run: echo "/opt/flutter/bin" >> $GITHUB_PATH

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android AAB
        run: flutter build appbundle --release

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  deploy:
    runs-on: ubuntu-latest
    needs: build-android
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download APK artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/

      - name: Use Cached Flutter SDK
        run: echo "/opt/flutter/bin" >> $GITHUB_PATH

      - name: Install Firebase CLI
        run: |
          curl -sL https://firebase.tools | bash
          echo "$HOME/.firebase/bin" >> $GITHUB_PATH

      - name: Set up Firebase Authentication
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > firebase-service-account.json

      - name: Export Google Cloud Credentials
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/firebase-service-account.json" >> $GITHUB_ENV

      - name: Verify Firebase Authentication
        run: ls -la && cat firebase-service-account.json || echo "File not found"

      - name: Deploy Android to Firebase
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
          --app ${{ secrets.FIREBASE_APP_ID }} \
          --groups "testers"
