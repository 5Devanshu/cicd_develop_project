name: Flutter CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *' # Runs daily at midnight UTC

jobs:
  checkout-setup:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'

      - name: Run Flutter doctor
        run: flutter doctor -v

  code-quality:
    runs-on: ubuntu-latest
    needs: checkout-setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter analyze
        run: flutter analyze

      - name: Run unit tests
        run: flutter test

  build-android:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'

      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install dependencies
        run: flutter pub get

      - name: Build Android APK
        run: flutter build apk --release

      - name: Build Android AAB
        run: flutter build appbundle --release

      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Upload Android AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  deploy:
   needs: build-android
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install Firebase CLI
      run: |
        curl -sL https://firebase.tools | bash
        echo "$HOME/.firebase/bin" >> $GITHUB_PATH  # Ensure Firebase CLI is in PATH
        export PATH="$HOME/.firebase/bin:$PATH"

    - name: Setup Firebase Authentication
      run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}' > firebase-service-account.json

    - name: Authenticate with Google Cloud
      run: echo "GOOGLE_APPLICATION_CREDENTIALS=$(pwd)/firebase-service-account.json" >> $GITHUB_ENV

    - name: Deploy Android to Firebase
      run: |
        firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
        --app ${{ secrets.FIREBASE_APP_ID }} \
        --groups "testers"

    - name: Setup Fastlane JSON Key
      run: echo '${{ secrets.FASTLANE_ANDROID_JSON_KEY }}' > fastlane-secret.json

    - name: Deploy to Google Play Store (Fastlane)
      run: |
        gem install fastlane
        fastlane android beta --json_key fastlane-secret.json

 
