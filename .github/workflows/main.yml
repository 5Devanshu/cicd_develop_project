name: Flutter CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  checkout-setup:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'
      - name: Run Flutter doctor
        run: flutter doctor -v

  code-quality:
    runs-on: ubuntu-latest
    needs: checkout-setup
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'
      - name: Install dependencies
        run: flutter pub get
      - name: Run Flutter analyze
        run: flutter analyze
      - name: Run unit tests
        run: flutter test

  build-android:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Flutter SDK
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.4'
      - name: Install dependencies
        run: flutter pub get
      - name: Clean Flutter project
        run: flutter clean
      - name: Build Android APK
        run: flutter build apk --release
      - name: List files in build directory
        run: ls -R build/app/outputs/flutter-apk/
      - name: Check if APK exists
        run: |
          if [ ! -f build/app/outputs/flutter-apk/app-release.apk ]; then
            echo "APK file not found!"
            exit 1
          fi
      - name: Build Android AAB
        run: flutter build appbundle --release
      - name: Upload Android APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
      - name: Upload Android AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-aab
          path: build/app/outputs/bundle/release/app-release.aab

  deploy:
   needs: build-android
   runs-on: ubuntu-latest
   steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker to use Fastlane
      run: |
        docker pull fastlane/fastlane

    - name: Configure Google Application Credentials
      run: |
        echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > $HOME/gcp-key.json

    - name: Run Fastlane for Android (Docker)
      run: |
        docker run --rm \
          -v $PWD:/workspace \
          -v $HOME/gcp-key.json:/gcp-key.json \
          fastlane/fastlane:latest \
          fastlane distribute
      working-directory: android
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /gcp-key.json


